{"mappings":"oeAAA,IAAAA,EAAAC,EAAA,SAEA,MAAMC,EAAOC,SAASC,cAAc,SAGpC,SAASC,EAAcC,EAAUC,GAC/B,MAAMC,EAAgBC,KAAKC,SAAW,GACtC,OAAO,IAAIC,SAAQ,CAACC,EAASC,KAC3BC,YAAW,KACLN,EACFI,EAAQ,C,SAAEN,E,MAAUC,IAEpBM,EAAO,C,SAAEP,E,MAAUC,GAAQ,GAE5BA,EAAM,G,CAXbQ,QAAQC,IAAId,GAeZA,EAAKe,iBAAiB,UAEtB,SAA0BC,GACxBA,EAAMC,iBAEN,IAAIC,EAAQC,OAAOnB,EAAKK,MAAMe,OAC1BC,EAAOF,OAAOnB,EAAKqB,KAAKD,OACxBE,EAASH,OAAOnB,EAAKsB,OAAOF,OAEhC,IAAI,IAAIG,EAAI,EAAGA,GAAKD,EAAQC,GAAK,EACjCpB,EAAcoB,EAAGL,GAChBM,MAAK,EAACpB,SAAEA,EAAQC,MAAEA,MACjBP,EAAA2B,OAAOC,QAAQ,qBAAqBtB,QAAeC,OACnDQ,QAAQC,IAAI,uBAAqBV,QAAiBC,MAAU,IAE7DsB,OAAM,EAACvB,SAAEA,EAAQC,MAAEA,MAClBP,EAAA2B,OAAOG,QAAQ,oBAAoBxB,QAAeC,OAClDQ,QAAQC,IAAI,sBAAoBV,QAAeC,MAAU,IAE3Da,GAASG,C","sources":["src/js/03-promises.js"],"sourcesContent":["import { Notify } from 'notiflix/build/notiflix-notify-aio';\n\nconst form = document.querySelector('.form');\nconsole.log(form);\n\nfunction createPromise(position, delay) {\n  const shouldResolve = Math.random() > 0.3;\n  return new Promise((resolve, reject) => {\n    setTimeout(() => {\n      if (shouldResolve) {\n        resolve({ position, delay });\n      } else {\n        reject({ position, delay });\n      }\n    }, delay);\n  });\n}\n\nform.addEventListener('submit', handleFormSubmit);\n\nfunction handleFormSubmit(event){\n  event.preventDefault();\n\n  let delay = Number(form.delay.value);\n  let step = Number(form.step.value)\n  let amount = Number(form.amount.value)\n\n  for(let i = 1; i <= amount; i += 1) {\n  createPromise(i, delay)\n  .then(({ position, delay }) => {\n    Notify.success(`Fulfilled promise ${position} in ${delay}ms`);\n    console.log(`✅ Fulfilled promise ${position} in ${delay}ms`);\n  })\n  .catch(({ position, delay }) => {\n    Notify.failure(`Rejected promise ${position} in ${delay}ms`)\n    console.log(`❌ Rejected promise ${position} in ${delay}ms`);\n  });\n  delay += step;\n  }\n};\n\n\n\n\n\n\n"],"names":["$iQIUW","parcelRequire","$47d4ff9957288465$var$form","document","querySelector","$47d4ff9957288465$var$createPromise","position","delay","shouldResolve","Math","random","Promise","resolve","reject","setTimeout","console","log","addEventListener","event","preventDefault","delay1","Number","value","step","amount","i","then","Notify","success","catch","failure"],"version":3,"file":"03-promises.b019619d.js.map"}